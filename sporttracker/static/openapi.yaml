openapi: 3.0.3
info:
  title: Sport-Tracker-API
  version: 2.1.0
servers:
  - url: '/'
paths:
  /api/v2/login:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: "Okay"
        400:
          description: "Bad request. Username or password missing."
        401:
          description: "Unauthorized. Unknown user or wrong password."

  /api/v2/version:
    get:
     responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: '#/components/schemas/Version'

  /api/v2/workouts/distanceWorkout:
    get:
      summary: Lists all distance-based workouts
      tags:
        - distanceWorkout
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DistanceWorkoutModel'
    post:
      summary: Adds a new distance-based workout
      tags:
        - distanceWorkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistanceWorkoutFormModel'
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseId'

  /api/v2/workouts/fitnessWorkout:
    get:
      summary: Lists all fitness workouts
      tags:
        - fitnessWorkout
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FitnessWorkoutModel'
    post:
      summary: Adds a new fitness workout
      tags:
        - fitnessWorkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FitnessWorkoutFormModel'
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseId'

  /api/v2/monthGoals/monthGoalDistance:
    get:
      summary: Lists all distance-based month goals
      tags:
        - monthGoalDistance
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonthGoalDistanceModel'
    post:
      summary: Adds a new distance-based month goal
      tags:
        - monthGoalDistance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonthGoalDistanceFormModel'
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseId'

  /api/v2/monthGoals/monthGoalCount:
    get:
      summary: Lists all count-based month goals
      tags:
        - monthGoalCount
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonthGoalCountModel'
    post:
      summary: Adds a new count-based month goal
      tags:
        - monthGoalCount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonthGoalCountFormModel'
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseId'
  /api/v2/monthGoals/monthGoalDuration:
    get:
      summary: Lists all duration-based month goals
      tags:
        - monthGoalDuration
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonthGoalDurationModel'
    post:
      summary: Adds a new duration-based month goal
      tags:
        - monthGoalDuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonthGoalDurationFormModel'
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseId'

  /api/v2/workouts/distanceWorkout/{workout_id}/addGpxTrack:
    post:
      summary: Adds a gpx track to a distance-based workout. An existing gpx track associated with the workout will be replaced!
      tags:
        - distanceWorkout
      parameters:
        - in: path
          name: workout_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                gpxTrack:
                  type: string
                  format: binary
      responses:
        200:
          description: "Okay"
  /api/v2/workouts/distanceWorkout/{workout_id}/addHeartRateData:
    post:
      summary: Adds heart rate data to a distance-based workout. All existing heart rate data associated with the workout will be replaced! This will also replace the value of the attribute "average_heart_rate" for given workout.
      tags:
        - distanceWorkout
      parameters:
        - in: path
          name: workout_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeartRateDataListModel'
      responses:
        200:
          description: "Okay"

  /api/v2/workouts/fitnessWorkout/{workout_id}/addHeartRateData:
    post:
      summary: Adds heart rate data to a fitness workout. All existing heart rate data associated with the workout will be replaced! This will also replace the value of the attribute "average_heart_rate" for given workout.
      tags:
        - fitnessWorkout
      parameters:
        - in: path
          name: workout_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeartRateDataListModel'
      responses:
        200:
          description: "Okay"

  /api/v2/settings/participants:
    summary: Lists all available participants
    get:
      tags:
       - settings
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant'

  /api/v2/settings/customFields:
    get:
      summary: Lists all custom fields per workout type
      tags:
       - settings
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                type: object
                properties:
                  BIKING:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomField'
                  RUNNING:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomField'
                  HIKING:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomField'
                  FITNESS:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomField'

  /api/v2/plannedTours:
    get:
      summary: Lists all planned tours
      tags:
       - plannedTour
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlannedTour'

  /api/v2/maintenances:
    get:
      summary: Lists all maintenances and if their reminder is triggered
      tags:
       - maintenance
      responses:
        200:
          description: "Okay"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Maintenance'

components:
  schemas:
    DistanceWorkoutFormModel:
      type: object
      required:
        - name
        - type
        - date
        - start_time
        - distance
        - duration
      properties:
        name:
          type: string
          description: Name of the workout
        workout_type:
          example: BIKING
          type: string
          enum: [BIKING, RUNNING, HIKING]
          description: Distance workout type
        date:
          type: string
          example: 2023-11-19
          description: Workout date in the format YYYY-MM-DD
        start_time:
          type: string
          example: 11:23
          description: Workout start time in the format HH:mm
        distance:
          type: integer
          description: Workout distance in meters
        duration:
          type: integer
          description: Workout duration in seconds
        average_heart_rate:
          type: integer
          description: Average heart rate in bpm
        elevation_sum:
          type: integer
          description: Elevation gain in meters
        participants:
          type: array
          description: Optional list of IDs of participants
          items:
            type: integer
          example: []
        planned_tour_id:
          type: integer
          description: Optional id of a planned tour this workout is based on.
        custom_fields:
          type: object
          example: {'bike': 'Cube'}
          description: Optional map of custom field names and their corresponding values. Available custom fields can be queried via API. Some custom fields may be required.

    DistanceWorkoutModel:
      type: object
      properties:
        id:
          type: integer
          description: ID of the workout
        name:
          type: string
          description: Name of the workout
        workout_type:
          example: BIKING
          type: string
          enum: [BIKING, RUNNING, HIKING]
          description: Distance workout type
        date:
          type: string
          example: 2023-11-19
          description: Workout date in the format YYYY-MM-DD
        start_time:
          type: string
          example: 11:23
          description: Workout start time in the format HH:mm
        distance:
          type: integer
          description: Workout distance in meters
        duration:
          type: integer
          description: Workout duration in seconds
        average_heart_rate:
          type: integer
          description: Average heart rate in bpm
        elevation_sum:
          type: integer
          description: Elevation gain in meters
        participants:
          type: array
          description: Optional list of IDs of participants
          items:
            type: integer
          example: []
        planned_tour_id:
          type: integer
          description: Optional id of a planned tour this workout is based on.
        custom_fields:
          type: object
          example: {'bike': 'Cube'}
          description: Optional map of custom field names and their corresponding values.
        has_gpx:
          type: boolean
          description: Does this workout have an associated gpx track?

    FitnessWorkoutFormModel:
      type: object
      required:
        - name
        - type
        - date
        - start_time
        - duration
        - fitness_workout_type
      properties:
        name:
          type: string
          description: Name of the workout
        workout_type:
         example: FITNESS
         type: string
         enum: [FITNESS]
         description: Fitness workout type
        date:
          type: string
          example: 2023-11-19
          description: Workout date in the format YYYY-MM-DD
        start_time:
          type: string
          example: 11:23
          description: Workout start time in the format HH:mm
        duration:
          type: integer
          description: Workout duration in seconds
        average_heart_rate:
          type: integer
          description: Average heart rate in bpm
        fitness_workout_type:
          example: DURATION_BASED
          type: string
          enum: [DURATION_BASED, REPETITION_BASED]
          description: Workout type
        fitness_workout_categories:
          type: array
          description: Optional list of workout categories
          example: []
          items:
            type: string
            enum: [ARMS, LEGS, CORE, YOGA]
        participants:
          type: array
          description: Optional list of IDs of participants
          items:
            type: integer
          example: []
        custom_fields:
          type: object
          example: {'bike': 'Cube'}
          description: Optional map of custom field names and their corresponding values. Available custom fields can be queried via API. Some custom fields may be required.

    FitnessWorkoutModel:
      type: object
      properties:
        id:
          type: integer
          description: ID of the workout
        name:
          type: string
          description: Name of the workout
        workout_type:
         example: FITNESS
         type: string
         enum: [FITNESS]
         description: Fitness workout type
        date:
          type: string
          example: 2023-11-19
          description: Workout date in the format YYYY-MM-DD
        start_time:
          type: string
          example: 11:23
          description: Workout start time in the format HH:mm
        duration:
          type: integer
          description: Workout duration in seconds
        average_heart_rate:
          type: integer
          description: Average heart rate in bpm
        fitness_workout_type:
          example: DURATION_BASED
          type: string
          enum: [DURATION_BASED, REPETITION_BASED]
          description: Workout type
        fitness_workout_categories:
          type: array
          description: Optional list of workout categories
          example: []
          items:
            type: string
            enum: [ARMS, LEGS, CORE, YOGA]
        participants:
          type: array
          description: Optional list of IDs of participants
          items:
            type: integer
          example: []
        custom_fields:
          type: object
          example: {'bike': 'Cube'}
          description: Optional map of custom field names and their corresponding values.

    MonthGoalDistanceFormModel:
      type: object
      required:
        - type
        - year
        - month
        - distance_minimum
        - distance_perfect
      properties:
        workout_type:
          example: BIKING
          type: string
          enum: [BIKING, RUNNING, HIKING]
          description: Distance workout type
        year:
          type: integer
          example: 2024
        month:
          type: integer
          example: 1
        distance_minimum:
          type: number
          format: float
          example: 100.0
        distance_perfect:
          type: number
          format: float
          example: 200.0

    MonthGoalDistanceModel:
      type: object
      properties:
        id:
          type: integer
          description: ID of the month goal
        workout_type:
          example: BIKING
          type: string
          enum: [BIKING, RUNNING, HIKING]
          description: Distance workout type
        year:
          type: integer
          example: 2024
        month:
          type: integer
          example: 1
        distance_minimum:
          type: number
          format: float
          example: 100.0
        distance_perfect:
          type: number
          format: float
          example: 200.0

    MonthGoalCountFormModel:
      type: object
      required:
        - type
        - year
        - month
        - count_minimum
        - count_perfect
      properties:
        workout_type:
          example: BIKING
          type: string
          enum: [BIKING, RUNNING, HIKING, FITNESS]
          description: Distance or fitness workout type
        year:
          type: integer
          example: 2024
        month:
          type: integer
          example: 1
        count_minimum:
          type: integer
          example: 3
        count_perfect:
          type: integer
          example: 5

    MonthGoalCountModel:
      type: object
      properties:
        id:
          type: integer
          description: ID of the month goal
        workout_type:
          example: BIKING
          type: string
          enum: [BIKING, RUNNING, HIKING, FITNESS]
          description: Distance or fitness workout type
        year:
          type: integer
          example: 2024
        month:
          type: integer
          example: 1
        count_minimum:
          type: integer
          example: 3
        count_perfect:
          type: integer
          example: 5

    MonthGoalDurationFormModel:
      type: object
      required:
        - type
        - year
        - month
        - duration_minimum
        - duration_perfect
      properties:
        workout_type:
          example: BIKING
          type: string
          enum: [BIKING, RUNNING, HIKING, FITNESS]
          description: Distance or fitness workout type
        year:
          type: integer
          example: 2024
        month:
          type: integer
          example: 1
        duration_minimum:
          type: integer
          example: 60
        duration_perfect:
          type: integer
          example: 180

    MonthGoalDurationModel:
      type: object
      properties:
        id:
          type: integer
          description: ID of the month goal
        workout_type:
          example: BIKING
          type: string
          enum: [BIKING, RUNNING, HIKING, FITNESS]
          description: Distance or fitness workout type
        year:
          type: integer
          example: 2024
        month:
          type: integer
          example: 1
        count_minimum:
          type: integer
          example: 3
        count_perfect:
          type: integer
          example: 5

    ResponseId:
      type: object
      properties:
        id:
          type: integer

    Participant:
      type: object
      properties:
        id:
          type: integer
          description: ID of the participant
        name:
          type: string
          description: Name of the participant

    CustomField:
      type: object
      properties:
        id:
          type: integer
          description: ID of the custom field
        workout_type:
          example: BIKING
          type: string
          enum: [BIKING, RUNNING, HIKING, FITNESS]
          description: Distance or fitness workout type
        field_type:
          example: STRING
          type: string
          enum: [STRING, INTEGER, FLOAT]
          description: Type of the custom field
        name:
          type: string
          description: Name of the custom field
        is_required:
          type: boolean
          description: Is this custom field required when creating a new workout?

    PlannedTour:
      type: object
      properties:
        id:
          type: integer
          description: ID of the planned tour
        workout_type:
          example: BIKING
          type: string
          enum: [BIKING, RUNNING, HIKING]
          description: Distance workout type
        name:
          type: string
          description: Name of the planned tour

    Maintenance:
      type: object
      properties:
        id:
          type: integer
          description: ID of the maintenance
        workout_type:
          example: BIKING
          type: string
          enum: [BIKING, RUNNING, HIKING, FITNESS]
          description: Distance or fitness workout type
        description:
          type: string
          description: Description of the maintenance
        is_reminder_active:
          type: boolean
          description: Is a reminder configured for this maintenance?
        reminder_limit:
          type: integer
          description: Distance in meter for the reminder
        is_reminder_triggered:
          type: boolean
          description: Is the reminder triggered at the moment (the limit exceeded)?
        limit_exceeded_distance:
          type: integer
          description: Distance in meters by which the reminder limit is exceeded

    HeartRateDataListModel:
      type: object
      required:
       - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HeartRateDataModel'

    HeartRateDataModel:
      type: object
      required:
        - timestamp
        - bpm
    properties:
      timestamp:
        example: 2023-11-19 12:45:22
        description: Date time in the format YYYY-MM-DD HH:mm:SS
      bpm:
        type: integer
        example: 123
        description: Beats per minute

    Version:
      type: object
      properties:
        version:
          type: string
          example: 2.0.0
